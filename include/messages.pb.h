/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _request_Command {
    request_Command_PING = 0,
    request_Command_SEND = 1,
    request_Command_SEND_AND_REQUEST = 2,
    request_Command_REQUEST = 3
} request_Command;

typedef enum _response_Result {
    response_Result_OK = 0,
    response_Result_NOK = 1
} response_Result;

/* Struct definitions */
typedef struct _request {
    pb_callback_t client_id;
    request_Command command;
    pb_callback_t payload;
} request;

typedef struct _response {
    response_Result result_code;
    pb_callback_t payload;
} response;


/* Helper constants for enums */
#define _request_Command_MIN request_Command_PING
#define _request_Command_MAX request_Command_REQUEST
#define _request_Command_ARRAYSIZE ((request_Command)(request_Command_REQUEST+1))

#define _response_Result_MIN response_Result_OK
#define _response_Result_MAX response_Result_NOK
#define _response_Result_ARRAYSIZE ((response_Result)(response_Result_NOK+1))


/* Initializer values for message structs */
#define request_init_default                     {{{NULL}, NULL}, _request_Command_MIN, {{NULL}, NULL}}
#define response_init_default                    {_response_Result_MIN, {{NULL}, NULL}}
#define request_init_zero                        {{{NULL}, NULL}, _request_Command_MIN, {{NULL}, NULL}}
#define response_init_zero                       {_response_Result_MIN, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define request_client_id_tag                    1
#define request_command_tag                      2
#define request_payload_tag                      3
#define response_result_code_tag                 1
#define response_payload_tag                     2

/* Struct field encoding specification for nanopb */
#define request_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   client_id,         1) \
X(a, STATIC,   SINGULAR, UENUM,    command,           2) \
X(a, CALLBACK, SINGULAR, STRING,   payload,           3)
#define request_CALLBACK pb_default_field_callback
#define request_DEFAULT NULL

#define response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    result_code,       1) \
X(a, CALLBACK, SINGULAR, STRING,   payload,           2)
#define response_CALLBACK pb_default_field_callback
#define response_DEFAULT NULL

extern const pb_msgdesc_t request_msg;
extern const pb_msgdesc_t response_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define request_fields &request_msg
#define response_fields &response_msg

/* Maximum encoded size of messages (where known) */
/* request_size depends on runtime parameters */
/* response_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
